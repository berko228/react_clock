{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","info","toUTCString","slice","setState","prevProps","name","props","debug","clearInterval","className","Component","App","hasClock","clockName","getRandomName","value","now","toString","document","addEventListener","e","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAEhCC,QAAQC,KAAK,EAAKR,MAAMC,KAAKQ,cAAcC,OAAO,IAAK,IACvD,EAAKC,SAAS,CAAEV,KAAM,IAAIC,SACzB,OAZP,gCAeE,SAAmBU,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCN,QAAQQ,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAlBpE,kCAsBE,WACEG,cAAcZ,KAAKD,WAvBvB,oBA0BE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKQ,cAAcC,OAAO,IAAK,YAvC1C,GAA2BQ,aCDdC,EAAb,4MACEnB,MAAQ,CACNoB,UAAU,EACVC,UAAW,WAHf,EAMElB,QAAU,EANZ,EAwBEmB,cAAgB,WACd,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,IA3BpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,SAAS,WACjC,EAAKhB,SAAS,CAAES,UAAU,OAG5BM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAEC,iBAEF,EAAKlB,SAAS,CAAES,UAAU,OAG5BhB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKK,SAAS,CAAEU,UAAW,EAAKC,oBAC/B,QArBP,oBA8BE,WACE,IAAQF,EAAahB,KAAKJ,MAAlBoB,SAER,OACE,sBAAKH,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOP,KAAMT,KAAKJ,MAAMqB,mBApC7C,GAAyBH,aCNzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.ba37a87f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name : string;\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component <Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}